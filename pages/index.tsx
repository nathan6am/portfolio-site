import Head from "next/head";
import Image from "next/image";
import styles from "../styles/Home.module.css";
import ScrollDownButton from "../components/ScrollButton";
import { motion, useInView, useScroll, useTransform } from "framer-motion";
import { FaLinkedin, FaGithub } from "react-icons/fa";
import { IoMdMail } from "react-icons/io";
import { MdLocationCity } from "react-icons/md";
import Button from "../components/Button";
import { BsCode, BsDownload } from "react-icons/bs";
import Skills from "../components/Skills";
import Navbar from "../components/Navbar";
import { AiFillTag, AiFillCode } from "react-icons/ai";
import { useEffect, useRef, useState } from "react";
import GithubLogo from "../public/logos/github.svg";
import { RxExternalLink } from "react-icons/rx";
import { useRouter } from "next/router";
import SectionHeader from "../components/SectionHeader";
import Projects from "../components/Projects";
import Input from "../components/Input";
import classNames from "classnames";
export default function Home() {
  const [activeTab, setActiveTab] = useState<string>("home");
  return (
    <div>
      <Head>
        <title>Nathan Pho</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar activeTab={activeTab} setActiveTab={setActiveTab} />
      <Intro setActiveTab={setActiveTab} />
      <div className="w-full flex justify-center items-center border-t border-themeLight/[0.2] bg-themeLight/[0.05] shadow-lg">
        <AboutSection setActiveTab={setActiveTab} />
      </div>
      <section className="w-full flex justify-center items-center border-t border-themeLight/[0.2] ">
        <Projects setActiveTab={setActiveTab} />
      </section>
      <div className="w-full flex justify-center items-center border-t border-themeLight/[0.2] bg-themeLight/[0.05] shadow-lg">
        <section className="container max-w-7xl sm:px-6 px-1 py-6" id="contact">
          <SectionHeader title="Get in Touch" />
          <div className="max-w-4xl mx-auto">
            <div className="flex flex-col md:flex-row md:gap-10">
              <Input label="First Name" placeholder="First Name" />
              <Input label="Last Name" placeholder="Last Name" />
            </div>
            <Input label="Email" placeholder="Email" />
            <span className="flex flex-row items-center mb-1">
              <label className="block text-themeLight/[0.8] text-md font-medium" htmlFor={"message"}>
                Message
              </label>
            </span>
            <textarea
              className={classNames(
                "appearance-none bg-themeLight/[0.1] rounded-md placeholder-themeLight/[0.6] border-themeLight/[0.2] border w-full",
                "focus:bg-themeLight/[0.2] focus:ring-themeLight focus:border-themeLight ring-offset-0 focus:outline-none",
                "py-2 pr-4 pl-3 text-lg"
              )}
            />
            <div className="flex flex-row justify-center w-full border-b border-themeLight/[0.2]">
              <Button variant="primary" className="my-10 " width="md">
                Send Message
              </Button>
            </div>
            <div className="h-10 mt-10">
              <p className="text-themeLight/[0.6] text-center text-lg">
                Or email me directly at{" "}
                <a href="mailto:nathanpho47@gmail.com" className="text-teal-500 hover:text-teal-600">
                  nathanpho47@gmail.com
                </a>
              </p>
            </div>
          </div>
        </section>
      </div>

      <footer className={styles.footer}>
        <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{" "}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a>
      </footer>
    </div>
  );
}

interface SectionProps {
  title: string;
  id: string;
  children?: JSX.Element | string | Array<JSX.Element | string>;
}

function Section() {}

function Intro({ setActiveTab }: { setActiveTab: (tab: string) => void }) {
  const ref = useRef(null);
  const inView = useInView(ref, { amount: 0.8 });
  const scrollRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: scrollRef,
    offset: ["end end", "start start"],
  });
  const opacity = useTransform(scrollYProgress, [0, 0.3, 1], [1, 1, 0]);
  const offset = useTransform(scrollYProgress, [0.2, 0.8], [0, -120]);
  useEffect(() => {
    if (inView) {
      setActiveTab("home");
    }
  }, [inView]);
  return (
    <main ref={ref} className="flex flex-col min-h-screen w-full bg-[#070f1c] px-1 py-4 sm:p-10 items-center relative">
      <motion.div style={{ opacity: opacity }} className="flex flex-col container max-w-7xl mt-40 p-6 w-full mb-20">
        <motion.h2
          initial={{ y: -40, opacity: 0 }}
          animate={{ y: 0, opacity: 0.6 }}
          transition={{
            y: {
              type: "easeIn",
              stiffness: 80,
              duration: 0.5,
            },
            opacity: {
              type: "easeIn",
              duration: 0.7,
            },
          }}
          className="text-xl my-2 ml-1 opacity-60"
        >
          {`Welcome to my Portfolio, I'm`}
        </motion.h2>
        <motion.h1
          initial={{ x: 90, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{
            delay: 0.2,
            x: {
              type: "spring",
              stiffness: 40,
              duration: 0.5,
            },
            opacity: {
              type: "easeIn",
              duration: 0.7,
            },
          }}
          className="text-white text-5xl sm:text-6xl md:text-7xl my-2 font-bold text-transparent text-8xl bg-clip-text w-fit bg-gradient-to-r from-emerald-400 to-teal-700 drop-shadow-[10px_20px_20px_rgba(44,191,144,0.1)]"
        >
          Nathan Pho,
        </motion.h1>
        <motion.h1
          initial={{ x: -90, opacity: 0 }}
          animate={{ x: 0, opacity: 1 }}
          transition={{
            delay: 0.2,
            x: {
              type: "spring",
              stiffness: 40,
              duration: 0.5,
            },
            opacity: {
              type: "easeIn",
              duration: 0.7,
            },
          }}
          className="text-4xl md:text-6xl my-2"
        >
          Full-Stack Developer & Designer.
        </motion.h1>
        <motion.div
          initial={{ y: 40, opacity: 0 }}
          animate={{ y: 0, opacity: 1 }}
          transition={{
            delay: 0.6,
            y: {
              type: "easeIn",
              stiffness: 80,
              duration: 0.5,
            },
            opacity: {
              type: "easeIn",
              duration: 0.7,
            },
          }}
          className="max-w-[600px] my-2"
        >
          <h2 className="text-xl my-2 ml-1 opacity-60">
            I am a full-stack JavaScript developer a passion for creating highly functional, responsive, and beautiful
            applications for the web and mobile.
          </h2>
          <motion.button
            style={{ backgroundSize: "200%", backgroundPositionX: "50%" }}
            whileTap={{ scale: 0.98 }}
            className="w-fit px-6 py-3 text-lg bg-teal-600 hover:bg-teal-700  w-fit rounded-lg shadow transition-colors duration-400 my-6"
          >
            See my work
          </motion.button>
        </motion.div>
      </motion.div>
      <ScrollDownButton />
      <div ref={scrollRef}></div>
    </main>
  );
}

function AboutSection({ setActiveTab }: { setActiveTab: (tab: string) => void }) {
  const ref = useRef(null);
  const inView = useInView(ref, { amount: 0.5 });
  const scrollRef = useRef<HTMLDivElement>(null);
  const opacityRef = useRef<HTMLDivElement>(null);
  const { scrollYProgress } = useScroll({
    target: opacityRef,
    offset: ["end end", "start start"],
  });
  const opacity = useTransform(scrollYProgress, [0, 0.3, 1], [1, 1, 0]);
  const scrollInView = useInView(scrollRef, { amount: 0.2 });
  useEffect(() => {
    if (inView) {
      setActiveTab("about");
    }
  }, [inView]);

  return (
    <section className="container max-w-7xl sm:px-6 px-1 py-6 max-w-screen overflow-x-hidden" id="about">
      <SectionHeader title="About Me" />
      <div />
      <div ref={ref} className="flex flex-col md:flex-row py-10 md:py-20 items-center">
        <motion.div className="w-full max-w-sm" style={{ opacity }}>
          <img
            style={{
              transform: scrollInView ? "none" : "translateX(-100px)",
              opacity: scrollInView ? 1 : 0,
              transition: "all 0.9s cubic-bezier(0.17, 0.55, 0.55, 1) 0s",
            }}
            src="/headshot.png"
            className="h-fit max-w-sm w-full object-contain mb-4 md:mb-0 rounded-lg opacity-80"
          ></img>
        </motion.div>
        <motion.div ref={scrollRef} style={{ opacity }} className="flex flex-col w-full px-2 sm:pl-4 md:pl-10">
          <motion.div
            style={{
              transform: scrollInView ? "none" : "translateX(120px)",
              opacity: scrollInView ? 1 : 0,
              transition: "all 0.5s cubic-bezier(0.17, 0.55, 0.55, 1) 0s",
            }}
          >
            <h1 className="text-3xl font-semibold text-teal-500">Nathan Pho</h1>
            <a href="mailto:nathanpho47@gmail.com" className="text-themeLight/[0.6] hover:text-teal-300/[0.8] text-lg">
              nathanpho47@gmail.com
            </a>

            <p className="text-lg text-themeLight/[0.6]">
              <MdLocationCity className="inline mr-2" />
              Washington, D.C.
            </p>
            <div className="flex flex-row items-center text-themeLight/[0.5] my-4">
              <FaGithub className="text-2xl mr-4" />
              <FaLinkedin className="text-2xl mr-4" />
              <IoMdMail className="text-2xl mr-4" />
            </div>
            <p className="text-themeLight/[0.8] text-lg">
              {`It is a long established fact that a reader will be distracted by the readable content of a page when
              looking at its layout. The point of using Lorem Ipsum is that it has a more-or-less normal distribution of
              letters, as opposed to using 'Content here, content here', making it look like readable English. Many
              desktop publishing packages and web page editors now use Lorem Ipsum as their default model text, and a
              search for 'lorem ipsum' will uncover many web sites still in their infancy. Various versions have evolved
              over the years, sometimes by accident, sometimes on purpose (injected humour and the like).`}
            </p>
          </motion.div>
          <motion.div
            style={{
              transform: scrollInView ? "none" : "translateY(40px)",
              opacity: scrollInView ? 1 : 0,
              transition: "all 0.9s cubic-bezier(0.17, 0.55, 0.55, 1) 0.1s",
            }}
            className="flex flex-col justify-center lg:justify-start w-full items-center lg:flex-row my-10"
          >
            <Button variant="primary" className="lg:mr-4 " width="sm">
              <BsDownload className="inline mr-2" />
              Download Resume
            </Button>
            <div className="h-4 lg:hidden"></div>
            <Button variant="secondary" outline width="sm">
              Contact Me
            </Button>
          </motion.div>
          <div ref={opacityRef} />
        </motion.div>
      </div>
      <Skills />
    </section>
  );
}
